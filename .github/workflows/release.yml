# https://docs.github.com/en/actions

name: "Release"

on: # yamllint disable-line rule:truthy
  push:
    tags:
      - "**"

jobs:
  release:
    name: "Release"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Determine tag"
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }








# name: Release New Version
# on: [push, pull_request]
# jobs:

#   start:
#     name: Starting üêºüêºüêº
#     runs-on: ubuntu-latest
#     steps:
#     - name: Starting
#       id: init
#       run: |
#         echo "Starting CI/CD of ${{ github.repository }}"


#   deploy_to_development:
#     name: CI/CD - Development
#     runs-on: ubuntu-latest
#     if: ${{ github.ref != 'refs/heads/main' }}
#     needs: start
#     environment:
#       name: Development
#       url: https://www.youtube.com/watch?v=dQw4w9WgXcQ
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set up Node 18
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - name: Install dependencies
#         run: npm ci
#      - name: Create Release notes
#        uses: actions/github-script@v6
#        with: 
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           await github.request(`POST /repos/${{ github.repository }}/releases`, {
#             tag_name: "${{ github.ref }}",
#             generate_release_notes: true
#           });



  # deploy_to_staging:
  #   name: CI/CD - Staging
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   runs-on: ubuntu-latest
  #   needs: start
  #   environment:
  #     name: Staging
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up Node 18
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: npm install
  # deploy_to_production:
  #   name: CI/CD - Production
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   runs-on: ubuntu-latest
  #   needs: deploy_to_staging
  #   environment:
  #     name: Production
  #     url: https://www.youtube.com/watch?v=dQw4w9WgXcQ
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up Node 18
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: npm install